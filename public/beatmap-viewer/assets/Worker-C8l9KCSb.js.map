{"version":3,"file":"Worker-C8l9KCSb.js","sources":["../scripts/Workers/Worker.js"],"sourcesContent":["function Clamp(val, from, to) {\r\n    return Math.max(Math.min(val, to), from);\r\n}\r\n\r\nfunction binarySearch(list, value, compareFunc) {\r\n    let start = 0;\r\n    let end = list.length - 1;\r\n\r\n    while (end >= start) {\r\n        const mid = start + Math.floor((end - start) / 2);\r\n\r\n        if (compareFunc(list[mid], value) === 0) return mid;\r\n\r\n        if (compareFunc(list[mid], value) < 0) {\r\n            start = mid + 1;\r\n            continue;\r\n        }\r\n\r\n        if (compareFunc(list[mid], value) > 0) {\r\n            end = mid - 1;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\nclass Timer {\r\n    static isPlaying = false;\r\n    static currentTime = 1;\r\n    static absStartTime = 0;\r\n    static lastTime = 0;\r\n    static playbackRate = 1;\r\n\r\n    static objects = [];\r\n    static filtered = [];\r\n    static fpBoundary = [];\r\n    static filteredTimeline = [];\r\n\r\n    static range = 0;\r\n\r\n    static moddedStats = {\r\n        approachRate: 5,\r\n        circleSize: 5,\r\n        HPDrainRate: 5,\r\n        overallDifficulty: 5,\r\n        stackLeniency: 7,\r\n        circleDiameter: (2 * (54.4 - 4.48 * 5) * 236) / 256,\r\n        preempt: 1200,\r\n        fadeIn: 800,\r\n        sliderTickRate: 1,\r\n        radius: 54.4 - 4.48 * 5,\r\n        stackOffset: (-6.4 * (1 - (0.7 * (5 - 5)) / 5)) / 2,\r\n    };\r\n\r\n    static mods = {\r\n        HR: false,\r\n        EZ: false,\r\n    };\r\n\r\n    static _renderStart = 0;\r\n    static _lastRenderTime = 0;\r\n    static _msQueue = [];\r\n\r\n    static getCurrentTime() {\r\n        if (!this.isPlaying) return this.currentTime + (Timer.mods.DT ? -40 : 0);\r\n        return this.currentTime + (performance.now() - this.absStartTime) * Timer.playbackRate + (Timer.mods.DT ? -40 : 0);\r\n    }\r\n\r\n    static getObjects() {\r\n        const currentTime = this.getCurrentTime();\r\n        const currentPreempt = this.moddedStats.preempt;\r\n\r\n        const compareFunc = (element, value) => {\r\n            if (element.endTime < value - Timer.range) return -1;\r\n            if (element.time > value + Timer.range) return 1;\r\n            return 0;\r\n        };\r\n\r\n        const drawList = [];\r\n        const fpBoundary = [];\r\n\r\n        const foundIndex = binarySearch(this.objects, currentTime, compareFunc);\r\n        if (foundIndex !== -1) {\r\n            let start = foundIndex - 1;\r\n            let end = foundIndex + 1;\r\n\r\n            while (start >= 0 && compareFunc(this.objects[start], currentTime) === 0) {\r\n                drawList.push(this.objects[start]);\r\n                fpBoundary.push(this.objects[start]);\r\n                start--;\r\n            }\r\n\r\n            drawList.reverse();\r\n            drawList.push(this.objects[foundIndex]);\r\n\r\n            while (end <= this.objects.length - 1 && compareFunc(this.objects[end], currentTime) === 0) {\r\n                drawList.push(this.objects[end]);\r\n                fpBoundary.push(this.objects[end]);\r\n                end++;\r\n            }\r\n\r\n            drawList.reverse();\r\n\r\n            if (start >= 0) {\r\n                fpBoundary.push(this.objects[start]);\r\n            }\r\n\r\n            if (end <= this.objects.length - 1) {\r\n                fpBoundary.push(this.objects[end]);\r\n            }\r\n        }\r\n\r\n        const removed = [];\r\n        this.filteredTimeline.forEach((object) => {\r\n            if (drawList.length > 0) {\r\n                const firstObj = drawList.at(-1);\r\n                const lastObj = drawList.at(0);\r\n\r\n                if (object.time <= lastObj.time && object.time >= firstObj.time) return;\r\n            }\r\n            removed.push(object);\r\n        });\r\n\r\n        const addTop = [];\r\n        const addBack = [];\r\n        if (this.filteredTimeline.length > 0) {\r\n            drawList.forEach((object) => {\r\n                if (object.time > this.filteredTimeline.at(0).time) addBack.push(object);\r\n                if (object.time < this.filteredTimeline.at(-1).time) addTop.push(object);\r\n            });\r\n        } else {\r\n            addTop.push(...drawList);\r\n        }\r\n\r\n        this.filteredTimeline = [...drawList];\r\n\r\n        const drawListPlayfield = drawList.filter((object) => object.killTime + 800 >= currentTime && object.time - currentPreempt <= currentTime);\r\n        const removedPlayfield = [];\r\n        this.filtered.forEach((object) => {\r\n            if (drawListPlayfield.length > 0) {\r\n                const firstObj = drawListPlayfield.at(-1);\r\n                const lastObj = drawListPlayfield.at(0);\r\n\r\n                if (object.time <= lastObj.time && object.time >= firstObj.time) return;\r\n            }\r\n            removedPlayfield.push(object);\r\n        });\r\n\r\n        const addTopPlayfield = [];\r\n        const addBackPlayfield = [];\r\n\r\n        if (this.filtered.length > 0) {\r\n            drawListPlayfield.forEach((object) => {\r\n                if (object.time > this.filtered.at(0).time) addBackPlayfield.push(object);\r\n                if (object.time < this.filtered.at(-1).time) addTopPlayfield.push(object);\r\n            });\r\n        } else {\r\n            addTopPlayfield.push(...drawListPlayfield);\r\n        }\r\n\r\n        this.filtered = [...drawListPlayfield];\r\n\r\n        const removedFp = [];\r\n        this.fpBoundary.forEach((object) => {\r\n            if (fpBoundary.find((o) => object.idx === o.idx || drawListPlayfield.find((o) => object.idx === o.idx))) return;\r\n            removedFp.push(object);\r\n        });\r\n\r\n        const addedFp = fpBoundary.filter((object) => !this.fpBoundary.some((o) => o.idx === object.idx));\r\n        this.fpBoundary = fpBoundary;\r\n\r\n        return {\r\n            timeline: {\r\n                removed,\r\n                addBack,\r\n                addTop,\r\n                filtered: this.filteredTimeline,\r\n            },\r\n            playfield: {\r\n                removed: removedPlayfield,\r\n                addBack: addBackPlayfield,\r\n                addTop: addTopPlayfield,\r\n                fpBoundary,\r\n                removedFp,\r\n                addedFp,\r\n                filtered: this.filtered,\r\n            },\r\n        };\r\n    }\r\n\r\n    static loop() {\r\n        this._renderStart = performance.now();\r\n        const deltaMs = this._renderStart - this._lastRenderTime;\r\n        this._msQueue.push(deltaMs);\r\n\r\n        if (this.objects.length > 0) {\r\n            const { timeline, playfield } = this.getObjects();\r\n            const currentTime = this.getCurrentTime();\r\n\r\n            postMessage({\r\n                type: \"updateOrder\",\r\n                objects: {\r\n                    ...playfield,\r\n                    // current\r\n                },\r\n                timeline: {\r\n                    ...timeline,\r\n                },\r\n                currentTime,\r\n                lastTime: this.lastTime,\r\n            });\r\n\r\n            this.lastTime = currentTime;\r\n        }\r\n\r\n        if (this._msQueue.length > 100) this._msQueue.slice(-100);\r\n\r\n        postMessage({\r\n            type: \"updateMs\",\r\n            deltaMs:\r\n                this._msQueue.reduce((accm, curr, idx) => {\r\n                    return accm + curr * ((idx + 1) / this._msQueue.length);\r\n                }, 0) /\r\n                ((1 / this._msQueue.length + 1) * (this._msQueue.length / 2)),\r\n        });\r\n\r\n        this._lastRenderTime = this._renderStart;\r\n    }\r\n}\r\n\r\nclass Slider {}\r\n\r\nonmessage = (event) => {\r\n    if (event.data.type === \"start\") {\r\n        Timer.isPlaying = true;\r\n        Timer.absStartTime = performance.now();\r\n    }\r\n\r\n    if (event.data.type === \"stop\") {\r\n        Timer.isPlaying = false;\r\n        Timer.currentTime += (performance.now() - Timer.absStartTime) * Timer.playbackRate;\r\n    }\r\n\r\n    if (event.data.type === \"seek\") {\r\n        const { time } = event.data;\r\n        Timer.currentTime = time;\r\n    }\r\n\r\n    if (event.data.type === \"objects\") {\r\n        const { objects } = event.data;\r\n        Timer.objects = objects;\r\n    }\r\n\r\n    if (event.data.type === \"updateStats\") {\r\n        const { mods, moddedStats, playbackRate } = event.data;\r\n        Timer.mods = mods;\r\n        Timer.moddedStats = moddedStats;\r\n        Timer.playbackRate = playbackRate;\r\n    }\r\n\r\n    if (event.data.type === \"clear\") {\r\n        Timer.objects = [];\r\n        Timer.filtered = [];\r\n\r\n        Timer.isPlaying = false;\r\n        Timer.currentTime = 1;\r\n        Timer.lastTime = 0;\r\n    }\r\n\r\n    if (event.data.type === \"range\") {\r\n        const { range } = event.data;\r\n        Timer.range = range;\r\n\r\n        // console.log(\"GOT RANGED\", range)\r\n    }\r\n};\r\n\r\nsetInterval(() => Timer.loop(), 0);\r\n"],"names":["binarySearch","list","value","compareFunc","start","end","mid","_Timer","currentTime","currentPreempt","element","drawList","fpBoundary","foundIndex","removed","object","firstObj","lastObj","addTop","addBack","drawListPlayfield","removedPlayfield","addTopPlayfield","addBackPlayfield","removedFp","o","addedFp","deltaMs","timeline","playfield","accm","curr","idx","__publicField","Timer","event","time","objects","mods","moddedStats","playbackRate","range"],"mappings":"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"}